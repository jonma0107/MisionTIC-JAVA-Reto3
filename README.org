* Reto 3: Descripción

** Hotel maravillas del mundo
En el hotel "las 7 maravillas del mundo", se han mezclado las llaves
de las habitaciones, tanto las originales como las copias. Se necesita
conocer que llaves faltan y cuales han sido encontradas. Para eso se
necesitan una serie de funciones para ayudar al software que debe
encontrar esa información.

** 1.)
La primera del las funciones, llamada "edificios", obtiene el nombre
de los edificios que tienen llaves en la lista encontrada. La función
debe recibir una lista con el edificio de cada llave encontrada y
obtener de ella los edificios sin repeticiones. Ejemplo:

#+BEGIN_SRC
Para la lista ["Taj Mahal", "Machu Picchu", "Chichen Itzá", "Taj Mahal", "Taj Mahal","Chichen Itzá", "Taj Mahal", "Machu Picchu"]
#+END_SRC

la salida de la función debe ser la siguiente lista:

#+BEGIN_SRC
["Taj Mahal", "Machu Picchu", "Chichen Itzá"]
#+END_SRC

** 2.)
La segunda función, llamada "encontrada", obtiene dos listas y un
valor, la primera es una lista con las posiciones en la lista llaves,
la segunda una lista con los edificios de cada llave encontrada y el
último valor será una variable con un string el nombre de un
edificio. La función debe entregar una lista con las posiciones en las
posiciones en las que efectivamente se encuentra el edificio
solicitado. Ejemplo:

#+BEGIN_SRCPara el llamado encontrada([1,3,5,6], ["Taj Mahal", "Machu Picchu", "Chichen Itzá", "Taj Mahal", "Taj Mahal", "Chichen Itzá", "Taj Mahal", "Machu Picchu"], "Taj Mahal")
#+END_SRC

Debe retornar:

#+BEGIN_SRC
[3, 6]
#+END_SRC

** 3.)
La tercera de las funciones, llamada "faltantes", obtiene una lista de
llaves encontradas por la administradora y otra lista de las llaves
encontradas por el mensajero. El sistema debe retornar una lista de
los números de las habitaciones que aparecen en la primera lista, pero
no en la segunda. Ejemplo:

#+BEGIN_SRC
Para el llamado faltantes([3,5,7,10,15,16],[3,5,10,13])
#+END_SRC

Debe retornar :

#+BEGIN_SRC
[7,15,16]
#+END_SRC

** 4.)
La cuarta y última función, llamada "diferencia", recibe las mismas
dos listas de la función anterior e identifica la que tenga menor
cantidad de llaves faltantes, respecto a la otra.

#+BEGIN_SRC
Para el llamado diferencia([3,5,7,10,15,16],[3,5,10,13])
#+END_SRC

Debe retornar:

#+BEGIN_SRC
1
#+END_SRC

Porque la administradora le faltan: [13] con respecto a la segunda, y
en la segunda le faltan: [7, 15, 16] con respecto a la primera. Al
final la menor cantidad de llaves faltantes es 1.

** Entrada:
Este programa no requiere entrada. Ni generará salida. Se requiere que
el estudiante genere un archivo con el nombre =Llaves.java= sin main y
que respeten los nombres de las funciones dadas y sus parámetros.